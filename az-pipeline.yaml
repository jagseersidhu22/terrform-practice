trigger:
  branches:
    include:
      - main   # Ya jis branch pe tu deploy karna chahta hai

pool:
  vmImage: 'ubuntu-latest'

variables:
  TF_VERSION: '1.12.1'   # Yeh 'terraform -v' ka output ho sakta hai
  ARM_CLIENT_ID: $(ARM_CLIENT_ID)
  ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
  ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
  ARM_TENANT_ID: $(ARM_TENANT_ID)

stages:
- stage: TerraformInitPlanApply
  jobs:
  - job: terraform
    displayName: 'Terraform Job'
    steps:

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'

    - script: |
        curl -sL https://raw.githubusercontent.com/hashicorp/setup-terraform/main/setup.sh | bash
        terraform -install-autocomplete
      displayName: 'Install Terraform'

    - script: terraform version
      displayName: 'Check Terraform Version'

    - script: |
        echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$ARM_CLIENT_ID"
        echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$ARM_CLIENT_SECRET"
        echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$ARM_SUBSCRIPTION_ID"
        echo "##vso[task.setvariable variable=ARM_TENANT_ID]$ARM_TENANT_ID"
      displayName: 'Set Azure Auth Env Vars'

    - script: terraform init
      displayName: 'Terraform Init'
      workingDirectory: $(System.DefaultWorkingDirectory)

    - script: terraform plan -out=tfplan
      displayName: 'Terraform Plan'
      workingDirectory: $(System.DefaultWorkingDirectory)

    - script: terraform apply -auto-approve tfplan
      displayName: 'Terraform Apply'
      workingDirectory: $(System.DefaultWorkingDirectory)
